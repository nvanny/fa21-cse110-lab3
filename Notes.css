/* initial css setup for crucial elements */
hr {
    background-color: rgb(0, 102, 255);
    padding-bottom: 5px;
}

h2, h3 {
    color: royalblue;
}

#background {
    background-color: #f2f2f2;
}

* {
    margin-left: 1px;
}

/* testing out the different combinator features */
details > summary {
    color: purple;
}

div ~ img {
    display: block;
}

p + img {
    display: none;
}

h3.unfinished {
    color: teal;
}

/* creating the bulk of my css div classes where I will specify css that I want */
.agenda {
    text-decoration: underline;
    text-align: center;
    margin-top: 3px;
    margin-left: 1in;
    margin-right: 5cm;
    margin-bottom: 2vh;
    max-width: 100vw;
}

.agenda li {
    color: orange;
}

.unfinished {
    color: hsl(285, 100%, 60%);
    margin: 2vh 3vw 2vh 3em;
    display: block;
    height: 20vh;
    width: 90vw;
}

.new {
    display: inline;
    padding-top: 3px;
    padding-right: 3px;
    padding-bottom: 3px;
    padding-left: 3px;
    position: relative;
}

/* my particular favorite since it does something different, creating a flexbox */
.images {
    display: flex;
    flex-direction: row-reverse;
    flex-wrap: nowrap;
    justify-content: center;   
    min-width: 20vw;
    max-width: 100vw;
    border-style: solid;
    border-color: 'black';
    border-width: 2px;
    border-radius: 5px;
    padding: 3px 3px 3px 3px;
}

/* in mobile format we want to display in a more column fashion to accomodate */
@media (max-width:800px) {
    .images {
        flex-direction: column-reverse;
    }
}

.links {
    display: grid;
    column-gap: 5px;
    align-self: start;
    grid-template-columns: 1fr 3fr;
    position: static;
    margin: auto;
}

/* playing around with different attribute and pseudo states */

a:hover {
    color: pink;
    cursor: pointer;
}

a[href] {
    color: blue;
}

video:active {
    border-style: solid;
    border-color: 'blue';
    border-width: 2px;
}
